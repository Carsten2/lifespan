#ifndef NS_WORM_TRAINING_SET_IMAGE_H
#define NS_WORM_TRAINING_SET_IMAGE_H
#include "ns_detected_worm_info.h"
#include "ns_vector.h"
#include "ns_survival_curve.h"

class ns_annotated_training_set{
public:
	std::vector<ns_detected_worm_info *> worms;
	std::vector<ns_detected_worm_info *> non_worms;
	std::vector<ns_detected_worm_info *> censored_worms;
	std::vector<std::vector<std::vector<ns_detected_worm_info *> > > mutually_exclusive_groups;
	std::vector <ns_detected_worm_info> objects;
	std::vector<ns_packed_collage_position> worm_positions;
	std::vector<ns_image_region_stats> region_stats;
	~ns_annotated_training_set();
};

class ns_worm_training_set_image{
public:
	static void generate(const ns_image_worm_detection_results & results, ns_image_standard & out);

	static void decode(const ns_image_standard & in,ns_annotated_training_set & training_set);

	static ns_image_standard & check_box_filled();
	static ns_image_standard & check_box_unfilled();
private:
	static void generate_check_boxes();
	static ns_image_standard check_box_filled_;
	static ns_image_standard check_box_unfilled_;

};

#endif
